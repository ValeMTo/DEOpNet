<?xml version="1.0" encoding="UTF-8"?>
<instance xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="src/frodo2/algorithms/XCSPschemaJaCoP.xsd">
    <presentation name="easyThreeStates" maxConstraintArity="5" maximize="true" format="XCSP 2.1_FRODO" />
    <agents nbAgents="3">
        <agent name="agentA" />
        <agent name="agentB" />
        <agent name="agentC" />
    </agents>

    <domains>
        <domain name="generation" nbValues="21"> 0 500 1000 1500 2000 2500 3000 3500 4000 4500 5000 5500 6000 6500 7000 7500 8000 8500 9000 9500 10000</domain>
        <domain name="transmission_capacity" nbValues="5"> 0 500 1000 1500 2000</domain>
    </domains>

    <variables nbVariables="10">
        <variable name="solarGenerationA" domain="generation" agent="agentA" />
        <variable name="solarGenerationB" domain="generation" agent="agentB" />
        <variable name="solarGenerationC" domain="generation" agent="agentC" />
        <variable name="gasGenerationA" domain="generation" agent="agentA" />
        <variable name="gasGenerationB" domain="generation" agent="agentB" />
        <variable name="gasGenerationC" domain="generation" agent="agentC" />
        <variable name="transmissionAB" domain="transmission_capacity" agent="agentA" />
        <variable name="transmissionBA" domain="transmission_capacity" agent="agentB" />
        <variable name="transmissionBC" domain="transmission_capacity" agent="agentB" />
        <variable name="transmissionCB" domain="transmission_capacity" agent="agentC" />
    </variables>
    
    <predicates>
        <predicate name="meetDemand">
            <parameters>int solarGen int gasGen int inflow int outflow int demand</parameters>
            <expression>
                <functional>ge(add(sub(add(solarGen, gasGen), outflow), inflow), demand)</functional>
            </expression>
        </predicate>
        <predicate name="meetDemand_double_transmission">
            <parameters>int solarGen int gasGen int inflow int inflow2 int outflow int outflow2 int demand</parameters>
            <expression>
                <functional>ge(add(sub(add(solarGen, gasGen), add(outflow, outflow2)), add(inflow, inflow2)), demand)</functional>
            </expression>
        </predicate>
        <predicate name="withinCapacity">
            <parameters>int generation int transmission</parameters>
            <expression>
                <functional>ge(generation, transmission)</functional>
            </expression>
        </predicate>
        <predicate name="withinInstalledCapacity">
            <parameters>int generation int capacity</parameters>
            <expression>
                <functional>le(generation, capacity)</functional>
            </expression>
        </predicate>
        <predicate name="alreadyInstalledCapacity">
            <parameters>int generation int capacity</parameters>
            <expression>
                <functional>ge(generation, capacity)</functional>
            </expression>
        </predicate>
    </predicates>

    <functions>
        <function name="emissions_penalty" return="int">
            <parameters>int gasGeneration int penaltyFactor</parameters>
            <expression>
                <functional>neg(div(mul(gasGeneration, penaltyFactor), 2))</functional>
            </expression>
        </function>
        
        <function name="total_cost" return="int">
            <parameters>int generation int operatingCost</parameters>
            <expression>
                <functional> neg(div(mul(generation, operatingCost), 1000))</functional>
            </expression>
        </function>
    </functions>

    <constraints>
        <!-- Demand Constraints -->
        <constraint name="demand_A" arity="5" scope="solarGenerationA gasGenerationA transmissionAB transmissionBA" reference="meetDemand">
            <parameters>solarGenerationA gasGenerationA transmissionBA transmissionAB 5000</parameters>
        </constraint>
        <constraint name="demand_B" arity="7" scope="solarGenerationB gasGenerationB transmissionAB transmissionCB transmissionBA transmissionBC" reference="meetDemand_double_transmission">
            <parameters>solarGenerationB gasGenerationB transmissionAB transmissionCB transmissionBA transmissionBC 7000</parameters>
        </constraint>
        <constraint name="demand_C" arity="5" scope="solarGenerationC gasGenerationC transmissionCB transmissionBC" reference="meetDemand">
            <parameters>solarGenerationC gasGenerationC transmissionBC transmissionCB 4000</parameters>
        </constraint> 
        <!-- Transmission constraints -->
        <constraint name="transmission_capacity_A_B" arity="2" scope="solarGenerationA gasGenerationA transmissionAB" reference="withinCapacity">
            <parameters>solarGenerationA gasGenerationA transmissionAB</parameters>
        </constraint>
        <constraint name="transmission_capacity_B_A" arity="2" scope="solarGenerationB gasGenerationB transmissionBA" reference="withinCapacity">
            <parameters>solarGenerationB gasGenerationB transmissionBA</parameters>
        </constraint>
        <constraint name="transmission_capacity_B_C" arity="2" scope="solarGenerationB gasGenerationB transmissionBC" reference="withinCapacity">
            <parameters>solarGenerationB gasGenerationB transmissionBC</parameters>
        </constraint>
        <constraint name="transmission_capacity_C_B" arity="2" scope="solarGenerationC gasGenerationC transmissionCB" reference="withinCapacity">
            <parameters>solarGenerationC gasGenerationC transmissionCB</parameters>
        </constraint>
        <!-- Already installed capacity -->
        <constraint name="solar_installed_capacity_A" arity="2" scope="solarGenerationA" reference="withinInstalledCapacity">
            <parameters>solarGenerationA 5000</parameters>
        </constraint>
        <constraint name="solar_installed_capacity_B" arity="2" scope="solarGenerationB" reference="withinInstalledCapacity">
            <parameters>solarGenerationB 2000</parameters>
        </constraint>
        <constraint name="solar_installed_capacity_C" arity="2" scope="solarGenerationC" reference="withinInstalledCapacity">
            <parameters>solarGenerationC 8000</parameters>
        </constraint> 

        <!-- <constraint name="gas_installed_capacity_A" arity="2" scope="gasGenerationA" reference="alreadyInstalledCapacity">
            <parameters>gasGenerationA 1000</parameters>
        </constraint>
        <constraint name="gas_installed_capacity_B" arity="2" scope="gasGenerationB" reference="alreadyInstalledCapacity">
            <parameters>gasGenerationB 2000</parameters>
        </constraint>
        <constraint name="gas_installed_capacity_C" arity="2" scope="gasGenerationC" reference="alreadyInstalledCapacity">
            <parameters>gasGenerationC 1000</parameters>
        </constraint> -->

        <!-- Soft Constraints for Emission Penalty Minimization -->
        <constraint name="emissions_penalty_max_A" arity="2" scope="gasGenerationA" reference="emissions_penalty">
            <parameters>gasGenerationA 1</parameters>
        </constraint>
        <constraint name="emissions_penalty_max_B" arity="2" scope="gasGenerationB" reference="emissions_penalty">
            <parameters>gasGenerationB 1</parameters>
        </constraint>
        <constraint name="emissions_penalty_max_C" arity="2" scope="gasGenerationC" reference="emissions_penalty">
            <parameters>gasGenerationC 1</parameters>
        </constraint>

        <!-- Soft Constraints for Cost Minimization -->
        <constraint name="total_cost_solarA" arity="2" scope="solarGenerationA" reference="total_cost">
            <parameters>solarGenerationA 10</parameters>
        </constraint>
        <constraint name="total_cost_gasA" arity="2" scope="gasGenerationA" reference="total_cost">
            <parameters>gasGenerationA 20</parameters>
        </constraint>
        <constraint name="total_cost_solarB" arity="2" scope="solarGenerationB" reference="total_cost">
            <parameters>solarGenerationB 10</parameters>
        </constraint>
        <constraint name="total_cost_gasB" arity="2" scope="gasGenerationB" reference="total_cost">
            <parameters>gasGenerationB 20</parameters>
        </constraint>
        <constraint name="total_cost_solarC" arity="2" scope="solarGenerationC" reference="total_cost">
            <parameters>solarGenerationC 10</parameters>
        </constraint>
        <constraint name="total_cost_gasC" arity="2" scope="gasGenerationC" reference="total_cost">
            <parameters>gasGenerationC 20</parameters>
        </constraint>

        <!-- Soft Constraints for Transmission Costs -->
        <!-- <constraint name="total_cost_transmissionsAB" arity="2" scope="transmissionAB transmissionBA" reference="total_cost">
            <parameters>add(transmissionAB, transmissionBA) 0</parameters>
        </constraint>
        <constraint name="total_cost_transmissionsBC" arity="2" scope="transmissionBC transmissionCB" reference="total_cost">
            <parameters>add(transmissionBC, transmissionCB) 0</parameters>
        </constraint> -->
    </constraints>
</instance>