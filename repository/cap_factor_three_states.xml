<instance xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="src/frodo2/algorithms/XCSPschemaJaCoP.xsd">
    <presentation name="three_states" maxConstraintArity="7" maximize="true" format="XCSP 2.1_FRODO" />
    <agents nbAgents="3">
        <agent name="a" />
        <agent name="b" />
        <agent name="c" />
    </agents>

    <domains>
        <domain name="new_capacity" nbValues="11"> 0 1 2 3 4 5 6 7 8 9 10 </domain>
        <domain name="capacity_factor" nbValues="11"> 0 10 20 21 22 30 40 50 60 70 80 90 100 </domain> 
        <domain name="transmission_capacity_AB" nbValues="5"> 0 500 1000 1500 2000 </domain>
        <domain name="transmission_capacity_BC" nbValues="4"> 0 500 1000 1500 </domain>
    </domains>

    <variables>
        <variable name="solarCapacityA" domain="new_capacity" agent="a" />
        <variable name="solarCapacityB" domain="new_capacity" agent="b" />
        <variable name="solarCapacityC" domain="new_capacity" agent="cc1" />
        <variable name="gasCapacityA" domain="new_capacity" agent="a" />
        <variable name="gasCapacityB" domain="new_capacity" agent="b" />
        <variable name="gasCapacityC" domain="new_capacity" agent="c" />
        <variable name="gasFactorA" domain="capacity_factor" agent="a" />
        <variable name="gasFactorB" domain="capacity_factor" agent="b" />
        <variable name="gasFactorC" domain="capacity_factor" agent="c" />
        <variable name="transmissionAB" domain="transmission_capacity_AB" agent="a" />
        <variable name="transmissionBC" domain="transmission_capacity_BC" agent="b" />
        <variable name="transmissionBA" domain="transmission_capacity_AB" agent="b" />
        <variable name="transmissionCB" domain="transmission_capacity_BC" agent="c" />
    </variables>

    <predicates>
        <predicate name="meetDemand">
            <parameters>int solarCapacity int gasCapacity int gasFactor int inflow int outflow int demand</parameters>
            <expression>
                <functional>ge(add(sub(add(mul(solarCapacity, 1000), mul(gasCapacity, mul(gasFactor, 88))), outflow), inflow), demand)</functional>
            </expression>
        </predicate>
        <predicate name="meetDemand_double_transmission">
            <parameters>int solarCapacity int gasCapacity int gasFactor int inflow int inflow2 int outflow int outflow2 int demand</parameters>
            <expression>
                <functional>ge(add(sub(add(mul(solarCapacity, 1000),  mul(gasCapacity, mul(gasFactor, 88))), add(outflow, outflow2)), add(inflow, inflow2)), demand)</functional>
            </expression>
        </predicate>
        <predicate name="withinCapacity">
            <parameters>int capacity int transmission</parameters>
            <expression>
                <functional>ge(capacity, transmission)</functional>
            </expression>
        </predicate>
        <predicate name="withinInstalledCapacity">
            <parameters>int capacity int max_capacity</parameters>
            <expression>
                <functional>le(capacity, max_capacity)</functional>
            </expression>
        </predicate>
        <predicate name="alreadyInstalledCapacity">
            <parameters>int capacity int min_capacity</parameters>
            <expression>
                <functional>ge(capacity, min_capacity)</functional>
            </expression>
        </predicate>
        <predicate name="emissions_cap">
            <parameters>int gasCapacityA int gasFactorA int gasCapacityB int gasFactorB int gasCapacityC int gasFactorC int limit</parameters>
            <expression>
                <functional>le(add(add(mul(gasCapacityA, gasCapacityA), mul(gasCapacityB, gasCapacityB)), mul(gasCapacityC, gasCapacityC)), limit)</functional>
            </expression>
        </predicate>
    </predicates>

    <functions>
        <function name="total_cost" return="int">
            <parameters>int capacity int factor int operatingCost</parameters>
            <expression>
                <functional> neg(div(mul(mul(mul(capacity, factor), 8760), operatingCost), 10000))</functional>
            </expression>
        </function>
    </functions>

    <constraints>
        <constraint name="demand_A" arity="6" scope="solarCapacityA gasCapacityA gasFactorA transmissionAB transmissionBC" reference="meetDemand">
            <parameters>solarCapacityA gasCapacityA gasFactorA transmissionBC transmissionAB 5000</parameters>
        </constraint>
        <constraint name="demand_B" arity="8" scope="solarCapacityB gasCapacityB gasFactorB transmissionAB transmissionCB transmissionBC transmissionBA" reference="meetDemand_double_transmission">
            <parameters>solarCapacityB gasCapacityB gasFactorB transmissionAB transmissionCB transmissionBC transmissionBA 7000</parameters>
        </constraint>
        <constraint name="demand_C" arity="6" scope="solarCapacityC gasCapacityC gasFactorC transmissionBC transmissionCB" reference="meetDemand">
            <parameters>solarCapacityC gasCapacityC gasFactorC transmissionBC transmissionCB 4000</parameters>
        </constraint>

        <constraint name="gas_installed_capacity_A" arity="2" scope="gasCapacityA" reference="alreadyInstalledCapacity">
            <parameters>gasCapacityA 1</parameters>
        </constraint>
        <constraint name="gas_installed_capacity_B" arity="2" scope="gasCapacityB" reference="alreadyInstalledCapacity">
            <parameters>gasCapacityB 2</parameters>
        </constraint>
        <constraint name="gas_installed_capacity_C" arity="2" scope="gasCapacityC" reference="alreadyInstalledCapacity">
            <parameters>gasCapacityC 1</parameters>
        </constraint>

        <constraint name="solar_installed_capacity_A" arity="2" scope="solarCapacityA" reference="withinInstalledCapacity">
            <parameters>solarCapacityA 5</parameters>
        </constraint>
        <constraint name="solar_installed_capacity_B" arity="2" scope="solarCapacityB" reference="withinInstalledCapacity">
            <parameters>solarCapacityB 2</parameters>
        </constraint>
        <constraint name="solar_installed_capacity_C" arity="2" scope="solarCapacityC" reference="withinInstalledCapacity">
            <parameters>solarCapacityC 8</parameters>
        </constraint>

        <!-- Transmission constraints -->
        <!-- <constraint name="transmission_capacity_A_B" arity="2" scope="solarCapacityA gasCapacityA transmissionAB" reference="withinCapacity">
            <parameters>solarCapacityA gasCapacityA transmissionAB</parameters>
        </constraint>
        <constraint name="transmission_capacity_B_A" arity="2" scope="solarCapacityB gasCapacityB transmissionBA" reference="withinCapacity">
            <parameters>solarCapacityB gasCapacityB transmissionBA</parameters>
        </constraint>
        <constraint name="transmission_capacity_B_C" arity="2" scope="solarCapacityB gasCapacityB transmissionBC" reference="withinCapacity">
            <parameters>solarCapacityB gasCapacityB transmissionBC</parameters>
        </constraint>
        <constraint name="transmission_capacity_C_B" arity="2" scope="solarCapacityC gasCapacityC transmissionCB" reference="withinCapacity">
            <parameters>solarCapacityC gasCapacityC transmissionCB</parameters>
        </constraint> -->

        <constraint name="global_emissions_cap" arity="7" scope="gasCapacityA gasFactorA gasCapacityB gasFactorB gasCapacityC gasFactorC" reference="emissions_cap">
            <parameters>gasCapacityA gasFactorA gasCapacityB gasFactorB gasCapacityC gasFactorC 2000</parameters>
        </constraint>

        <!-- Soft Constraints for Cost Minimization -->
        <constraint name="total_cost_solarA" arity="3" scope="solarCapacityA" reference="total_cost">
            <parameters>solarCapacityA 11 10</parameters>
        </constraint>
        <constraint name="total_cost_gasA" arity="3" scope="gasCapacityA gasFactorA" reference="total_cost">
            <parameters>gasCapacityA gasFactorA 20</parameters>
        </constraint>
        <constraint name="total_cost_solarB" arity="3" scope="solarCapacityB" reference="total_cost">
            <parameters>solarCapacityB 11 10</parameters>
        </constraint>
        <constraint name="total_cost_gasB" arity="3" scope="gasCapacityB gasFactorB" reference="total_cost">
            <parameters>gasCapacityB gasFactorB 20</parameters>
        </constraint>
        <constraint name="total_cost_solarC" arity="3" scope="solarCapacityC" reference="total_cost">
            <parameters>solarCapacityC 11 10</parameters>
        </constraint>
        <constraint name="total_cost_gasC" arity="3" scope="gasCapacityC gasFactorC" reference="total_cost">
            <parameters>gasCapacityC gasFactorC 20</parameters>
        </constraint>
    </constraints>
</instance>
